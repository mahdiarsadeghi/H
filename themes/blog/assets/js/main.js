console.log('This site was generated by Hugo.');

// Theme toggle: persists preference to localStorage and respects prefers-color-scheme
(function () {
	function getPreferredTheme() {
		const stored = localStorage.getItem('theme');
		if (stored === 'dark' || stored === 'light') return stored;
		if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) return 'dark';
		return 'light';
	}

	function applyTheme(theme) {
		document.documentElement.setAttribute('data-theme', theme === 'dark' ? 'dark' : 'light');
		const btn = document.getElementById('theme-toggle');
		if (btn) {
			btn.setAttribute('aria-pressed', theme === 'dark' ? 'true' : 'false');
		}
	}

	function toggleTheme() {
		const current = document.documentElement.getAttribute('data-theme') === 'dark' ? 'dark' : 'light';
		const next = current === 'dark' ? 'light' : 'dark';
		localStorage.setItem('theme', next);
		applyTheme(next);
	}

	function initThemeToggle() {
		const initial = getPreferredTheme();
		applyTheme(initial);

		// If the button exists now, attach a direct listener
		const btn = document.getElementById('theme-toggle');
		if (btn) btn.addEventListener('click', toggleTheme);
	}

	// If DOM is already ready, init immediately; otherwise wait for DOMContentLoaded
	if (document.readyState === 'loading') {
		document.addEventListener('DOMContentLoaded', initThemeToggle);
	} else {
		initThemeToggle();
	}

	// Fallback: event delegation so clicks on the button work even if it is added later
	document.addEventListener('click', function (e) {
		const toggle = e.target.closest && e.target.closest('#theme-toggle');
		if (toggle) {
			toggleTheme();
		}
	});
})();

// Accessibility: keyboard shortcut (T) to toggle theme
document.addEventListener('keydown', function (e) {
	if (e.key && (e.key === 'T' || e.key === 't')) {
		const btn = document.getElementById('theme-toggle');
		if (btn) btn.click();
	}
});
